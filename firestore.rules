rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      // Function to check if user is authorized
      function isAuthorized() {
      	return request.auth.uid != null &&
    	  exists(/databases/$(database)/documents/profiles/$(request.auth.uid))
      }

		  // Calls
    	match /calls/{callId} {
        function callParticipant(resource) {
          return resource.data.creator == request.auth.uid || resource.data.target == request.auth.uid
        }
        allow read: if isAuthorized() && callParticipant(resource)

        // Offer Canidates
        match /offerCandidates/{offerCandidatesId} {
          allow create: if isAuthorized() && get(/databases/$(database)/documents/calls/$(callId)).data.creator == request.auth.uid
          allow read: if isAuthorized() && get(/databases/$(database)/documents/calls/$(callId)).data.target == request.auth.uid
        }

        // Answer Canidates
        match /answerCandidates/{answerCandidatesId} {
          allow create: if isAuthorized() && get(/databases/$(database)/documents/calls/$(callId)).data.target == request.auth.uid
          allow read: if isAuthorized() && get(/databases/$(database)/documents/calls/$(callId)).data.creator == request.auth.uid
        }
    	}
    }
  }
}